{
	"name": "Address",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AddressInput",
						"type": "DatasetReference"
					},
					"name": "SourceExtract"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Wdatadestination",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "RemoveColumns",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "AddressExtract"
				}
			],
			"script": "\n\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceExtract\nSourceExtract select(mapColumn(\n\t\tAddress = Column_1\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns\nRemoveColumns derive(Name = regexReplace((regexExtract(Address,`(\\D+)`,1)),',',' '),\n\t\tStreet = (regexSplit((regexExtract(Address,`( \\d+\\D)`,1)),`[,]`)[1])+(regexSplit((regexExtract(Address,`( \\D+ )`,1)),`[,]`)[1]),\n\t\tCity = (regexSplit((regexExtract(Address,`( \\D+ )`,1)),`[,]`)[2]),\n\t\tZipCode = (regexSplit((regexExtract(Address,`( \\D+\\d+)`,1)),`[,]`)[3])) ~> AddressExtract\nAddressExtract sink(input(\n\t\tCust_ID as string,\n\t\tCustomerName as string,\n\t\tCompany_Name as string,\n\t\tAddress as string,\n\t\tCity as string,\n\t\tCountry as string,\n\t\tState as string,\n\t\tZip as string,\n\t\t{Total Revenue} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
		}
	}
}