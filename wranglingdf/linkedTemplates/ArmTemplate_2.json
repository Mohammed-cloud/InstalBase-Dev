{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "wranglingdf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/csvsrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SourceBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FtpFileName": {
						"type": "string"
					},
					"SrcFolderPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FtpFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SrcFolderPath",
							"type": "Expression"
						},
						"container": "2019"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "John,Doe, 120 jefferson st., Riverside, NJ-08075",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SourceBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobtoRawTransaction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FiletoTable-Iteration",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Input",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyEachFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "csvsrc",
											"type": "DatasetReference",
											"parameters": {
												"FtpFileName": {
													"value": "@item().FtpFileName",
													"type": "Expression"
												},
												"SrcFolderPath": {
													"value": "@item().SrcFolderPath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().TableSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"Input": {
						"type": "array",
						"defaultValue": [
							{
								"SrcFolderPath": "/Customer/",
								"FtpFileName": "CustomerV1.csv",
								"TableSchema": "dbo",
								"TableName": "Spx_CustomerV1"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvsrc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyAllfiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File-Iteration",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.InputParams",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyEachFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "*",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "S1",
											"type": "DatasetReference",
											"parameters": {
												"FtpFileName": {
													"value": "@item().FtpFileName",
													"type": "Expression"
												},
												"SrcFolderPath": {
													"value": "@item().SrcFolderPath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "D1",
											"type": "DatasetReference",
											"parameters": {
												"BlobFileName": {
													"value": "@item().BlobFileName",
													"type": "Expression"
												},
												"OutputFolderPath": {
													"value": "@concat(item().OutputFolderPath, formatDateTime(utcnow(),'yyyyMMdd'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"InputParams": {
						"type": "Array",
						"defaultValue": [
							{
								"SrcFolderPath": "/Market_Seg/",
								"FtpFileName": "*",
								"OutputFolderPath": "Market",
								"BlobFileName": "Market"
							},
							{
								"SrcFolderPath": "/Orders/",
								"FtpFileName": "*",
								"OutputFolderPath": "Orders",
								"BlobFileName": "Orders"
							},
							{
								"SrcFolderPath": "/Qoutes/",
								"FtpFileName": "*",
								"OutputFolderPath": "Qoutes",
								"BlobFileName": "Qoutes"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicFileLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_ProcessFilesPerBatch_Quote",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_GetUnprocessedTransactionIds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_GetUnprocessedTransactionIds').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Lookup_GetDynamicMapping",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[usp_GetSourceToTransactionRawMapping]",
											"storedProcedureParameters": {
												"file_trans_id": {
													"type": "Int32",
													"value": {
														"value": "@item().file_trans_id",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Get File Structure",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "Lookup_GetDynamicMapping",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_Raw",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"structure"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Staging Table Creation",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get File Structure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_StagingCreation]",
										"storedProcedureParameters": {
											"FileName_INPUT": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												},
												"type": "String"
											},
											"schema": {
												"value": "Temp",
												"type": "String"
											},
											"SrcColumnName": {
												"value": {
													"value": "@replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get File Structure').output.structure), '[', ''), ']',''), '{\"name\":\"', '['),'\",\"type\":\"Int32\"}', '] int'), '\",\"type\":\"Int64\"}', '] bigint'), '\",\"type\":\"Decimal\"}', '] decimal(38,18)'), '\",\"type\":\"DateTime\"}', '] datetime2'), '\",\"type\":\"String\"}', '] nvarchar(4000)' )\n",
													"type": "Expression"
												},
												"type": "String"
											},
											"file_trans_Id": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.file_trans_Id",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Copy Blob To Staging Table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Staging Table Creation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_Raw",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_TempRaw",
											"type": "DatasetReference",
											"parameters": {
												"schema": "temp",
												"stage_table": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.filepattern",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Promote",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Blob To Staging Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Promote]",
										"storedProcedureParameters": {
											"file_target_table": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.Target_TableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"file_temp_table": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.filepattern",
													"type": "Expression"
												},
												"type": "String"
											},
											"file_trans_Id": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.file_trans_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"SinkSchema": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.SinkSchema",
													"type": "Expression"
												},
												"type": "String"
											},
											"SourceSchema": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.SourceSchema",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Lookup_GetUnprocessedTransactionIds",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetUnproccessedTransactionIds]",
								"storedProcedureParameters": {
									"flag": {
										"type": "String",
										"value": "UnProcessedBatch"
									}
								}
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CSVToTransactionRaw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_ProcessFilesPerBatch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_GetUnprocessedBatchIds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_GetUnprocessedBatchIds').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Lookup_GetDynamicMapping",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[usp_GetSourceToTransactionRawMapping]",
											"storedProcedureParameters": {
												"batchId": {
													"type": "Int32",
													"value": {
														"value": "@item().batch_id",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Check_jsonMapping_Parameter",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup_GetDynamicMapping",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup_GetDynamicMapping').output.firstRow.SourceSchema,'')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "StoredProcedure_UpdateTransactionRaw",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyCSVtoTransactionTable",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_UpdateTransactionRaw]",
													"storedProcedureParameters": {
														"batchId": {
															"value": {
																"value": "@item().batch_id",
																"type": "Expression"
															},
															"type": "Int32"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyCSVtoTransactionTable",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_CopyCSVToTransactionRawMapping]",
													"storedProcedureParameters": {
														"File_Id": {
															"value": {
																"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.batchId",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileName_INPUT": {
															"value": {
																"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"FilePath_INPUT": {
															"value": {
																"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilepath",
																"type": "Expression"
															},
															"type": "String"
														},
														"SourceSchema": {
															"value": {
																"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.SourceSchema",
																"type": "Expression"
															},
															"type": "String"
														},
														"SinkSchema": {
															"value": {
																"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.SinkSchema\n",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Lookup_GetUnprocessedBatchIds",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetUnproccessedBatchIds]",
								"storedProcedureParameters": {
									"flag": {
										"type": "String",
										"value": "UnProcessedBatch"
									}
								}
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"folder": {
					"name": "Transactions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CopyCSVtoTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_SourceToTransformationRaw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"dataIntegrationUnits": 32,
							"translator": {
								"value": "@pipeline().parameters.jsonMapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "SftpSrc",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									},
									"filepath": {
										"value": "@pipeline().parameters.filePath",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "RawTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"jsonMapping": {
						"type": "Object",
						"defaultValue": "jsonMapping"
					},
					"SourceSchema": {
						"type": "Object",
						"defaultValue": "SourceSchema"
					},
					"SinkSchema": {
						"type": "Object",
						"defaultValue": "SinkSchema"
					},
					"fileName": {
						"type": "String",
						"defaultValue": "fileName"
					},
					"filePath": {
						"type": "String",
						"defaultValue": "filePath"
					}
				},
				"folder": {
					"name": "Transactions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SftptoBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@{concat('Sales',formatDateTime(utcnow(),'yyyyMMdd'))}",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "*",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Des",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdatedDynamicFileLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Getting Transaction Id",
				"activities": [
					{
						"name": "ForEach_ProcessFilesPerBatch_Quote",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_GetUnprocessedTransactionIds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_GetUnprocessedTransactionIds').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Lookup_GetDynamicMapping",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[usp_GetSourceToTransactionRawMapping]",
											"storedProcedureParameters": {
												"file_trans_id": {
													"type": "Int32",
													"value": {
														"value": "@item().file_trans_id",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy Blob To Staging Table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup_GetDynamicMapping",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "Truncate table Temp. @{activity('Lookup_GetDynamicMapping').output.firstRow.Stage_TableName}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"parallelCopies": 1
									},
									"inputs": [
										{
											"referenceName": "DS_Raw",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_TempRaw",
											"type": "DatasetReference",
											"parameters": {
												"schema": "temp",
												"stage_table": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.Stage_TableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Promote Raw Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Blob To Staging Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Promote]",
										"storedProcedureParameters": {
											"file_target_table": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.Target_TableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"file_temp_table": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.Stage_TableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"file_trans_Id": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.file_trans_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"SinkSchema": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.SinkSchema",
													"type": "Expression"
												},
												"type": "String"
											},
											"Temp_SourceSchema": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.Temp_SourceSchema",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MovingToArchive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Success-UpdateFileTransaction",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SrcArchive",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DstArchive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "ProcessedFileDeletion",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "MovingToArchive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_DeleteFiles",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": false
										}
									}
								},
								{
									"name": "Success-UpdateFileTransaction",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Promote Raw Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateLoadStatus]",
										"storedProcedureParameters": {
											"file_Trans_Id": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.file_trans_Id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "RAW-completed",
												"type": "String"
											},
											"Trans_Status": {
												"value": "2",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Failure-UpdateFileTransaction",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Promote Raw Table",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateLoadStatus]",
										"storedProcedureParameters": {
											"file_Trans_Id": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.file_trans_Id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "RAW-failed",
												"type": "String"
											},
											"Trans_Status": {
												"value": "3",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MovingToArchive_Failure",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Failure-UpdateFileTransaction",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SrcArchive",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DstArchive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "ProcessedFileDeletion-Failure",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "MovingToArchive_Failure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_DeleteFiles",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": false
										}
									}
								},
								{
									"name": "Staging Failed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Blob To Staging Table",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateLoadStatus]",
										"storedProcedureParameters": {
											"file_Trans_Id": {
												"value": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.file_trans_Id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "RAW-failed",
												"type": "String"
											},
											"Trans_Status": {
												"value": "3",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MovingToArchive_Failure_Staging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Staging Failed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SrcArchive",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DstArchive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "ProcessedFileDeletion-Failure_Staging",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "MovingToArchive_Failure_Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_DeleteFiles",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_GetUnprocessedTransactionIds",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetUnproccessedTransactionIds]",
								"storedProcedureParameters": {
									"flag": {
										"type": "String",
										"value": "UnProcessedBatch"
									}
								}
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Check FlagFile for Current Load",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "ForEach_ProcessFilesPerBatch_Quote",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_MetaFlag",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Flag File Exist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check FlagFile for Current Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Check FlagFile for Current Load').output.exists,true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Flag File Moving To Archive",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFileName": "*Proceed*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ""
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_Flag",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DstArchive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Flag-File Deletion",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Flag File Moving To Archive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_Flag",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": false,
											"wildcardFileName": "*Flag*"
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"structure",
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.Structure",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "id",
										"value": {
											"value": "@activity('Get Metadata').output.Structure",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"id": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Column_loop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "INSERT INTO DBO.EMP_TAR (EMP_ID,EMP_Name,Salary,Comments,ID)\nSELECT EMP_ID, EMP_NAME,Salary,COMMENTS,@{pipeline().parameters.Id} FROM EMP\nSELECT 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Column_loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.structure",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Column_Data",
										"value": {
											"value": "@concat('[',item().Name,']', if(equals(item().Type,'String'),\nconcat(' ', 'nvarchar(max)',' '),''))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Raw",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "US_Quote_20200105_123 - Copy.csv",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "output",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(replace(replace(string(activity('Get Metadata1').output.structure), '[', ''), ']',''), '{\"name\":\"', '['),'\",\"type\":\"Int32\"}', '] int'), '\",\"type\":\"Int64\"}', '] bigint'), '\",\"type\":\"Decimal\"}', '] decimal(38,18)'), '\",\"type\":\"DateTime\"}', '] datetime2'), '\",\"type\":\"String\"}', '] nvarchar(4000)' )",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Id": {
						"type": "int"
					}
				},
				"variables": {
					"Column_Data": {
						"type": "Array"
					},
					"output": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_DeleteFiles",
								"type": "DatasetReference",
								"parameters": {
									"filename": "US_Quote_20200105_123.csv"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Address')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AddressInput",
								"type": "DatasetReference"
							},
							"name": "SourceExtract",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Wdatadestination",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "RemoveColumns",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "AddressExtract"
						}
					],
					"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceExtract\nSourceExtract select(mapColumn(\n\t\tAddress = Column_1\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns\nRemoveColumns derive(Name = regexReplace((regexExtract(Address,`(\\D+)`,1)),',',' '),\n\t\tStreet = (regexSplit((regexExtract(Address,`( \\d+\\D)`,1)),`[,]`)[1])+(regexSplit((regexExtract(Address,`( \\D+ )`,1)),`[,]`)[1]),\n\t\tCity = (regexSplit((regexExtract(Address,`( \\D+ )`,1)),`[,]`)[2]),\n\t\tZipCode = (regexSplit((regexExtract(Address,`( \\D+\\d+)`,1)),`[,]`)[3])) ~> AddressExtract\nAddressExtract sink(input(\n\t\tCust_ID as string,\n\t\tCustomerName as string,\n\t\tCompany_Name as string,\n\t\tAddress as string,\n\t\tCity as string,\n\t\tCountry as string,\n\t\tState as string,\n\t\tZip as string,\n\t\t{Total Revenue} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Flow",
								"type": "DatasetReference"
							},
							"name": "source",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "TempRawQuote",
								"type": "DatasetReference"
							},
							"name": "TempRaw",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TempRawQuote",
								"type": "DatasetReference"
							},
							"name": "InsertingintoTemp"
						},
						{
							"dataset": {
								"referenceName": "RawQuote",
								"type": "DatasetReference"
							},
							"name": "QuoteUSRaw"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn"
						}
					],
					"script": "parameters{\n\tfilename as string,\n\tFile_trans_id as string\n}\nsource(output(\n\t\tSerialNumber as string,\n\t\tSalesOrder as string,\n\t\t{Sales Item} as string,\n\t\tMaterial as string,\n\t\tQuantity as string,\n\t\tUoM as string,\n\t\tNetValue as string,\n\t\tCurrency as string,\n\t\tCreationDate as string,\n\t\tCreatedBy as string,\n\t\tPlant as string,\n\t\tDocumentType as string,\n\t\tDocumentCategory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\twildcardPaths:[('Quote/'+$filename)]) ~> source\nsource(output(\n\t\tSerial_Number as string,\n\t\tSales_Order as integer,\n\t\tSales_Item as integer,\n\t\tMaterial as string,\n\t\tQuantity as string,\n\t\tUoM as string,\n\t\tNet_value as string,\n\t\tCurrency as string,\n\t\tCreation_Date as string,\n\t\tCreated_By as string,\n\t\tPlant as string,\n\t\tDocument_Type as string,\n\t\tDocument_Category as string,\n\t\tBatch_Id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TempRaw\nsource derive(file_trans_Id = $File_trans_id) ~> DerivedColumn\nDerivedColumn sink(input(\n\t\tSerial_Number as string,\n\t\tSales_Order as integer,\n\t\tSales_Item as integer,\n\t\tMaterial as string,\n\t\tQuantity as string,\n\t\tUoM as string,\n\t\tNet_value as string,\n\t\tCurrency as string,\n\t\tCreation_Date as string,\n\t\tCreated_By as string,\n\t\tPlant as string,\n\t\tDocument_Type as string,\n\t\tDocument_Category as string,\n\t\tBatch_Id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tSerial_Number = SerialNumber,\n\t\tSales_Order = SalesOrder,\n\t\tSales_Item = {Sales Item},\n\t\tMaterial,\n\t\tQuantity,\n\t\tUoM,\n\t\tNet_value = NetValue,\n\t\tCurrency,\n\t\tCreation_Date = CreationDate,\n\t\tCreated_By = CreatedBy,\n\t\tPlant,\n\t\tDocument_Type = DocumentType,\n\t\tDocument_Category = DocumentCategory,\n\t\tBatch_Id = file_trans_Id\n\t)) ~> InsertingintoTemp\nTempRaw sink(input(\n\t\tSerial_Number as string,\n\t\tSales_Order as integer,\n\t\tSales_Item as integer,\n\t\tMaterial as string,\n\t\tQuantity as string,\n\t\tUoM as string,\n\t\tNet_value as string,\n\t\tCurrency as string,\n\t\tCreation_Date as string,\n\t\tCreated_By as string,\n\t\tPlant as string,\n\t\tDocument_Type as string,\n\t\tDocument_Category as string,\n\t\tBatch_Id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table') ~> QuoteUSRaw"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset-DeDupe')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CustomerV1",
								"type": "DatasetReference"
							},
							"name": "BlobSource",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "SurrogateKey"
						},
						{
							"name": "Grouping"
						},
						{
							"name": "Dedup"
						},
						{
							"name": "Select"
						}
					],
					"script": "source(output(\n\t\tCust_ID as string,\n\t\tCustomerName as string,\n\t\tCompany_Name as string,\n\t\tAddress as string,\n\t\tCity as string,\n\t\tCountry as string,\n\t\tState as string,\n\t\tZip as string,\n\t\t{Total Revenue} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> BlobSource\nBlobSource keyGenerate(output(SK as long),\n\tstartAt: 1L) ~> SurrogateKey\nSurrogateKey aggregate(groupBy(Cust_ID),\n\tCust_ID_Count = sum(1),\n\t\tSK = max(SK)) ~> Grouping\nGrouping, SurrogateKey join(Grouping@SK == SurrogateKey@SK,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Dedup\nDedup select(mapColumn(\n\t\tCust_ID = Grouping@Cust_ID,\n\t\tSK = Grouping@SK,\n\t\tCustomerName,\n\t\tCompany_Name,\n\t\tAddress,\n\t\tCity,\n\t\tCountry,\n\t\tState,\n\t\tZip,\n\t\t{Total Revenue}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table') ~> sink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IBTransformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RawTable",
								"type": "DatasetReference"
							},
							"name": "RawTransactionTable",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CleansedTable",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "CleansingCustomerNamesPart1"
						},
						{
							"name": "CleansingCustomernamesPart2"
						},
						{
							"name": "CreatingSeperateLineItem"
						},
						{
							"name": "SplitingSeperateLineItem"
						}
					],
					"script": "source(output(\n\t\tBun as string,\n\t\tCreated_By as string,\n\t\tCreation_Date as string,\n\t\tCurrency as string,\n\t\tCustomer_Name as string,\n\t\tDel_Date as string,\n\t\tDestination as string,\n\t\tDoc_Date as string,\n\t\tDocument_Category as string,\n\t\tDocument_Type as string,\n\t\tFX_RATE as string,\n\t\tGBP_Value as integer,\n\t\tItem as integer,\n\t\tJob_No as integer,\n\t\tLine_item as string,\n\t\tMaterial as string,\n\t\tMaterial_Description as string,\n\t\tNet_price as integer,\n\t\tNet_value as string,\n\t\tOrder_qty as string,\n\t\tper as long,\n\t\tPlant as string,\n\t\tPurchase_order_no as string,\n\t\tQuantity as string,\n\t\tSales_Item as integer,\n\t\tSales_Item_Description as string,\n\t\tSales_Item_Text as string,\n\t\tSales_Order as integer,\n\t\tSerial_Number as string,\n\t\tSold_to_pt as integer,\n\t\tUoM as string,\n\t\tBatch_Id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RawTransactionTable\nRawTransactionTable derive(Customer_Name = case((like(Customer_Name,'Pump%')),'Pumps123 LTD',Customer_Name)) ~> CleansingCustomerNamesPart1\nCleansingCustomerNamesPart1 derive(Customer_Name = case((Customer_Name=='Customer 2'),'SPX123 LTD',Customer_Name)) ~> CleansingCustomernamesPart2\nCleansingCustomernamesPart2 window(over(Serial_Number),\n\tasc(Quantity, true),\n\tRanking = rowNumber()) ~> CreatingSeperateLineItem\nCreatingSeperateLineItem derive(Serial_Number = Serial_Number+'_'+ toString(Ranking)) ~> SplitingSeperateLineItem\nSplitingSeperateLineItem sink(input(\n\t\tBun as string,\n\t\tCreated_By as string,\n\t\tCreation_Date as string,\n\t\tCurrency as string,\n\t\tCustomer_Name as string,\n\t\tDel_Date as string,\n\t\tDestination as string,\n\t\tDoc_Date as string,\n\t\tDocument_Category as string,\n\t\tDocument_Type as string,\n\t\tFX_RATE as string,\n\t\tGBP_Value as integer,\n\t\tItem as integer,\n\t\tJob_No as integer,\n\t\tLine_item as string,\n\t\tMaterial as string,\n\t\tMaterial_Description as string,\n\t\tNet_price as integer,\n\t\tNet_value as string,\n\t\tOrder_qty as string,\n\t\tper as long,\n\t\tPlant as string,\n\t\tPurchase_order_no as string,\n\t\tQuantity as string,\n\t\tSales_Item as integer,\n\t\tSales_Item_Description as string,\n\t\tSales_Item_Text as string,\n\t\tSales_Order as integer,\n\t\tSerialNumber as string,\n\t\tSold_to_pt as integer,\n\t\tUoM as string,\n\t\tBatch_Id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tBun,\n\t\tCreated_By,\n\t\tCreation_Date,\n\t\tCurrency,\n\t\tCustomer_Name,\n\t\tDel_Date,\n\t\tDestination,\n\t\tDoc_Date,\n\t\tDocument_Category,\n\t\tDocument_Type,\n\t\tFX_RATE,\n\t\tGBP_Value,\n\t\tItem,\n\t\tJob_No,\n\t\tLine_item,\n\t\tMaterial,\n\t\tMaterial_Description,\n\t\tNet_price,\n\t\tNet_value,\n\t\tOrder_qty,\n\t\tper,\n\t\tPlant,\n\t\tPurchase_order_no,\n\t\tQuantity,\n\t\tSales_Item,\n\t\tSales_Item_Description,\n\t\tSales_Item_Text,\n\t\tSales_Order,\n\t\tSerialNumber = Serial_Number,\n\t\tSold_to_pt,\n\t\tUoM,\n\t\tBatch_Id\n\t)) ~> sink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CopyDataFlow",
								"type": "DataFlowReference",
								"parameters": {
									"filename": {
										"value": "'@{pipeline().parameters.filename}'",
										"type": "Expression"
									},
									"File_trans_id": {
										"value": "'@{pipeline().parameters.BatchId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source": {
										"filename": {
											"value": "@pipeline().parameters.filename",
											"type": "Expression"
										}
									},
									"TempRaw": {},
									"InsertingintoTemp": {},
									"QuoteUSRaw": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "Quote_France_2019-12-16_000123.csv"
					},
					"BatchId": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CopyDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_ProcessFilesPerBatch_Quote",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Quotes_copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Quotes_copy').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Lookup_GetDynamicMapping",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[usp_GetSourceToTransactionRawMapping1]",
											"storedProcedureParameters": {
												"batchId": {
													"type": "Int32",
													"value": {
														"value": "@item().batch_id",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "CopyDataFlow",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Lookup_GetDynamicMapping",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "CopyDataFlow",
											"type": "DataFlowReference",
											"parameters": {
												"filename": {
													"value": "'@{activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename}'",
													"type": "Expression"
												},
												"File_trans_id": {
													"value": "'@{activity('Lookup_GetDynamicMapping').output.firstRow.batchId}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source": {
													"filename": {
														"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
														"type": "Expression"
													}
												},
												"TempRaw": {},
												"InsertingintoTemp": {},
												"QuoteUSRaw": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_GetUnprocessedBatchIds",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetUnproccessedBatchIds1]",
								"storedProcedureParameters": {
									"flag": {
										"type": "String",
										"value": "UnProcessedBatch"
									}
								}
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Quotes_copy",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup_GetUnprocessedBatchIds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_GetUnprocessedBatchIds').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().file_name_loc,'Quote_France')",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CopyDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileTestDrive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_ProcessFilesPerBatch_Quote",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Quotes_copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Quotes_copy').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Lookup_GetDynamicMapping",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[usp_GetSourceToTransactionRawMapping1]",
											"storedProcedureParameters": {
												"batchId": {
													"type": "Int32",
													"value": {
														"value": "@item().batch_id",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "CopyDataFlow",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Lookup_GetDynamicMapping",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "CopyDataFlow",
											"type": "DataFlowReference",
											"parameters": {
												"filename": {
													"value": "'@{activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename}'",
													"type": "Expression"
												},
												"File_trans_id": {
													"value": "'@{activity('Lookup_GetDynamicMapping').output.firstRow.batchId}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source": {
													"filename": {
														"value": "@activity('Lookup_GetDynamicMapping').output.firstRow.csvfilename",
														"type": "Expression"
													}
												},
												"TempRaw": {},
												"InsertingintoTemp": {},
												"QuoteUSRaw": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_GetUnprocessedBatchIds",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetUnproccessedBatchIds1]",
								"storedProcedureParameters": {
									"flag": {
										"type": "String",
										"value": "UnProcessedBatch"
									}
								}
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Quotes_copy",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup_GetUnprocessedBatchIds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_GetUnprocessedBatchIds').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().file_name_loc,'Quote_France')",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CopyDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SPX_Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataset-DeDupe",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataset-DeDupe",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BlobSource": {},
									"sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Dataset-DeDupe",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"dataset": {
								"referenceName": "AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {
									"TableSchema": {
										"value": "dbo.",
										"type": "Expression"
									},
									"TableName": {
										"value": "Spx_CustomerV1",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataset-DeDupe')]"
			]
		}
	]
}